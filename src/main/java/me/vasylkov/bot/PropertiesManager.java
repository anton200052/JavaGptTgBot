package me.vasylkov.bot;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.Properties;

public class PropertiesManager
{
    private static final String ruLocaleCode = "ru";
    private static final String enLocaleCode = "en";
    private static final Path pathToMessagesBaseName = Path.of("messages");
    private static final Path configPropertiesPath = Path.of("config.properties");
    private static final Path ruMsgPropertiesPath = Path.of(pathToMessagesBaseName.toString() + "_" + ruLocaleCode + ".properties");
    private static final Path enMsgPropertiesPath = Path.of(pathToMessagesBaseName.toString() + "_" + enLocaleCode + ".properties");


    private static Properties configProperties;
    private static Properties ruMsgProperties;
    private static Properties enMsgProperties;

    public static void loadMsgProperties()
    {
        if (!Files.exists(ruMsgPropertiesPath))
        {
            ruMsgProperties = initRuMsgDefaultProperties();

            try
            {
                Files.createFile(ruMsgPropertiesPath);
            }
            catch (IOException e)
            {
                e.printStackTrace();
            }
            storeProperties(ruMsgPropertiesPath, ruMsgProperties);
        }
        else
        {
            ruMsgProperties = loadExistProperties(ruMsgPropertiesPath);
        }

        if (!Files.exists(enMsgPropertiesPath))
        {
            enMsgProperties = initEnMsgDefaultProperties();

            try
            {
                Files.createFile(enMsgPropertiesPath);
            }
            catch (IOException e)
            {
                e.printStackTrace();
            }
            storeProperties(enMsgPropertiesPath, enMsgProperties);
        }
        else
        {
            enMsgProperties = loadExistProperties(enMsgPropertiesPath);
        }
    }

    public static void loadConfigProperties() throws NotValidConfigDataException
    {
        if (!Files.exists(configPropertiesPath))
        {
            configProperties = initConfigDefaultProperties();

            try
            {
                Files.createFile(configPropertiesPath);
            }
            catch (IOException e)
            {
                e.printStackTrace();
            }

            storeProperties(configPropertiesPath, configProperties);
        }
        else
        {
            configProperties = loadExistProperties(configPropertiesPath);
        }

        if (!isConfigPropertiesDataValid())
        {
            throw new NotValidConfigDataException("–û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª config.properties –∏ –∑–∞–º–µ–Ω–∏—Ç–µ —Å–ª–æ–≤–∞ empty —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—è. –ï—Å–ª–∏ –≤—ã –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤–∏–¥–∏—Ç–µ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–≥–¥–∞ —É–¥–∞–ª–∏—Ç–µ —Ñ–∞–π–ª –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –µ–≥–æ –∑–∞–Ω–æ–≤–æ");
        }
    }

    private static Properties initConfigDefaultProperties()
    {
        Properties properties = new Properties();
        properties.setProperty(PropertiesKeys.CONFIG_BOT_USERNAME.getProperty(), "empty");
        properties.setProperty(PropertiesKeys.CONFIG_BOT_TOKEN.getProperty(), "empty");
        properties.setProperty(PropertiesKeys.CONFIG_GPT3_TOKEN.getProperty(), "empty");
        properties.setProperty(PropertiesKeys.CONFIG_GPT4_TOKEN.getProperty(), "empty");
        properties.setProperty(PropertiesKeys.CONFIG_ADMINS_ID.getProperty(), "empty");
        return properties;
    }

    private static Properties initRuMsgDefaultProperties() {
        Properties properties = new Properties();

        // Errors
        properties.setProperty(PropertiesKeys.ERROR_NOT_A_TXT_FILE.getProperty(), "–û—à–∏–±–∫–∞! –§–∞–π–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ñ–æ—Ä–º–∞—Ç–∞ .txt");
        properties.setProperty(PropertiesKeys.ERROR_NOT_IN_MAIN_MENU.getProperty(), "–í—ã –¥–æ–ª–∂–Ω—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É.");
        properties.setProperty(PropertiesKeys.ERROR_INCORRECT_MODEL.getProperty(), "–í—ã–±—Ä–∞–Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –º–æ–¥–µ–ª–µ–π –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–º –º–µ–Ω—é");
        properties.setProperty(PropertiesKeys.ERROR_NOT_IN_CHAT.getProperty(), "–ß—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –±–æ—Ç—É –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É: /startchat");
        properties.setProperty(PropertiesKeys.ERROR_INCORRECT_INPUT.getProperty(), "–û—à–∏–±–∫–∞! –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞. –í—ã –º–æ–∂–µ—Ç–µ –ª–∏–±–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç—É, –ª–∏–±–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–º—É txt —Ñ–∞–π–ª –∏ –æ–Ω –ø—Ä–æ—á–∏—Ç–∞–µ—Ç –∏–∑ –Ω–µ–≥–æ.");
        properties.setProperty(PropertiesKeys.ERROR_ADMIN_MODE_PARSE.getProperty(), "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ");
        properties.setProperty(PropertiesKeys.ERROR_NOT_ENOUGH_TOKENS.getProperty(), """
        –ù–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ —á–µ–º 300 —Ç–æ–∫–µ–Ω–æ–≤ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å GPT-4 üôÅ
        –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –º–æ–¥–µ–ª—å –ª–∏–±–æ –ø–æ–ø–æ–ª–Ω–∏—Ç–µ —Å–≤–æ–π –±–∞–ª–∞–Ω—Å.
        ‚ö™ –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ - /balance
        """);
        properties.setProperty(PropertiesKeys.ERROR_REQUEST_ERROR.getProperty(), """
        –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç OpenAI.
        –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:
        - –°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.
        - –ü–µ—Ä–µ–≥—Ä—É–∑–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤ OpenAI.
        –†–µ—à–µ–Ω–∏–µ:
        - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /startchat –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å.
   
        """);
        properties.setProperty(PropertiesKeys.ERROR_USERNAME_NOT_AVAILABLE.getProperty(), """
        –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Telegram-–±–æ—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ —é–∑–µ—Ä–Ω–µ–π–º –∏–ª–∏ —Å–¥–µ–ª–∞–π—Ç–µ –µ–≥–æ –ø—É–±–ª–∏—á–Ω—ã–º –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Telegram.
        """);

        // Menu
        properties.setProperty(PropertiesKeys.MENU_MODEL_CHOOSE.getProperty(), "–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å —á–∞—Ç–∞ –≤ –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–º –º–µ–Ω—é.\nGPT-3.5: –ë–µ—Å–ø–ª–∞—Ç–Ω–æ");
        properties.setProperty(PropertiesKeys.MENU_STARTED_GPT3_CHAT.getProperty(), "–í—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞–ª–∏ —á–∞—Ç —Å –º–æ–¥–µ–ª—å—é GPT-3.5");
        properties.setProperty(PropertiesKeys.MENU_STARTED_GPT4_CHAT.getProperty(), "–í—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞–ª–∏ —á–∞—Ç —Å –º–æ–¥–µ–ª—å—é GPT-4. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤ –¥–æ 2-—Ö –º–∏–Ω—É—Ç");
        properties.setProperty(PropertiesKeys.MENU_RETURNED_TO_MAIN_MENU.getProperty(), "–í—ã –±—ã–ª–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.");
        properties.setProperty(PropertiesKeys.MENU_PRODUCT_LIST.getProperty(), """
        üíå –°–∫–æ–ª—å–∫–æ —Ç–æ–∫–µ–Ω–æ–≤ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏?
    
        ‚ö° –ü–æ–¥—Å–∫–∞–∑–∫–∞:
        ‚ö™ 50–ö —Ç–æ–∫–µ–Ω–æ–≤ ‚âà 300 –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç GPT-4
    
        ‚ÄºÔ∏è –û–ø–ª–∞—Ç–∞ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ —É–∫—Ä. –∫–∞—Ä—Ç—ã, –¥–ª—è –æ–ø–ª–∞—Ç—ã –¥—Ä—É–≥–æ–π –≤–∞–ª—é—Ç–æ–π —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π - /help ‚ÄºÔ∏è
        """);
        properties.setProperty(PropertiesKeys.MENU_BALANCE.getProperty(), """
        GPT-4:
        ‚ö™ –£ –≤–∞—Å %düí∞—Ç–æ–∫–µ–Ω–æ–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ
    
        GPT-3.5:
        ‚ö™ –ë–µ–∑–≥—Ä–∞–Ω–∏—á–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ üåü
    
        –ü–æ–∫—É–ø–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤:
        """);

        // Chat
        properties.setProperty(PropertiesKeys.CHAT_REQUEST_WAITING.getProperty(), "\uD83E\uDDE0ChatGPT –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç...");
        properties.setProperty(PropertiesKeys.CHAT_GPT3_TITLE.getProperty(), "üåüGPT-3.5üåü");
        properties.setProperty(PropertiesKeys.CHAT_GPT4_TITLE.getProperty(), "‚ö°GPT-4‚ö°");
        properties.setProperty(PropertiesKeys.CHAT_END_CHAT.getProperty(), "–ó–∞–≤–µ—Ä—à–∏—Ç—å —á–∞—Ç \uD83D\uDCA7");
        properties.setProperty(PropertiesKeys.CHAT_START_NEW_CHAT.getProperty(), "–ù–∞—á–∞—Ç—å –Ω–æ–≤—ã–π —á–∞—Ç \uD83D\uDD25");


        // Purchase
        properties.setProperty(PropertiesKeys.PURCHASE_MINIMAL_VALUE.getProperty(), "\uD83D\uDFE3+25–ö —Ç–æ–∫–µ–Ω–æ–≤ - 119 UAH (-40%)");
        properties.setProperty(PropertiesKeys.PURCHASE_MEDIUM_VALUE.getProperty(), "\uD83D\uDFE3+50–ö —Ç–æ–∫–µ–Ω–æ–≤ - 199 UAH (-50%)");
        properties.setProperty(PropertiesKeys.PURCHASE_MAXIMUM_VALUE.getProperty(), "\uD83D\uDFE3+100–ö —Ç–æ–∫–µ–Ω–æ–≤ - 319 UAH (-80%)");
        properties.setProperty(PropertiesKeys.PURCHASE_BUY_TOKENS.getProperty(), "\uD83E\uDD51–ö—É–ø–∏—Ç—å —Ç–æ–∫–µ–Ω—ã");
        properties.setProperty(PropertiesKeys.PURCHASE_FINAL_MSG.getProperty(), """
        ‚ö™ –û—Ç–ø—Ä–∞–≤—å—Ç–µ %d UAH –Ω–∞ –¥–∞–Ω–Ω—É—é –∫–∞—Ä—Ç—É:
        ‚ÄºÔ∏èMonoBank‚ÄºÔ∏è‚Üí (CARD NUMBER)
    
        ‚ö™ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞ –≤ —á–∞—Ç –∏ –æ–∂–∏–¥–∞–π—Ç–µ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –º–∏–Ω—É—Ç.
    
        üî¥ –ï—Å–ª–∏ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ –æ–ø–ª–∞—Ç–∞, –Ω–æ —Å–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω, —Ç–æ–∫–µ–Ω—ã –Ω–µ –±—É–¥—É—Ç –∑–∞—á–∏—Å–ª–µ–Ω—ã.
        """);

        // Admin
        properties.setProperty(PropertiesKeys.ADMIN_PRINT_USER_DATA.getProperty(), "–í–≤–µ–¥–∏—Ç–µ —é–∑–µ—Ä–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ: (—é–∑–µ—Ä–Ω–µ–π–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ)");
        properties.setProperty(PropertiesKeys.ADMIN_USER_NOT_FOUND.getProperty(), "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω");
        properties.setProperty(PropertiesKeys.ADMIN_TOKENS_ADDED.getProperty(), "–¢–æ–∫–µ–Ω—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –±–∞–ª–∞–Ω—Å —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
        properties.setProperty(PropertiesKeys.ADMIN_USER_SEND_PHOTO.getProperty(), "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @%s –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ:");
        properties.setProperty(PropertiesKeys.ADMIN_SEND_MESSAGE_TO_ALL.getProperty(), "–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.");

        return properties;
    }

    private static Properties initEnMsgDefaultProperties() {
        Properties properties = new Properties();

        // Errors
        properties.setProperty(PropertiesKeys.ERROR_NOT_A_TXT_FILE.getProperty(), "Error! The file must be in .txt format.");
        properties.setProperty(PropertiesKeys.ERROR_NOT_IN_MAIN_MENU.getProperty(), "You must exit the chat to use this command.");
        properties.setProperty(PropertiesKeys.ERROR_INCORRECT_MODEL.getProperty(), "Incorrect model selected. Please choose one of the models provided in the navigation menu.");
        properties.setProperty(PropertiesKeys.ERROR_NOT_IN_CHAT.getProperty(), "To ask a question to the bot, use the command: /startchat");
        properties.setProperty(PropertiesKeys.ERROR_INCORRECT_INPUT.getProperty(), "Error! Incorrect input format. You can either send a message to the bot or send a txt file for it to read.");
        properties.setProperty(PropertiesKeys.ERROR_ADMIN_MODE_PARSE.getProperty(), "Parsing error");
        properties.setProperty(PropertiesKeys.ERROR_NOT_ENOUGH_TOKENS.getProperty(), """
        You need to have more than 300 tokens on your balance to use GPT-4 üôÅ
        Please choose another model or top up your balance.
        ‚ö™ Top up tokens - /balance
        """);
        properties.setProperty(PropertiesKeys.ERROR_REQUEST_ERROR.getProperty(), """
        Error while trying to receive a response from OpenAI.
        Possible reasons:
        - Too many concurrent requests.
        - OpenAI server overload.
        Solution:
        - Use the /startchat command and retry your request.
        """);
        properties.setProperty(PropertiesKeys.ERROR_USERNAME_NOT_AVAILABLE.getProperty(), """
        To use the Telegram bot, add its username or make it public in your Telegram settings.
        """);

        // Menu
        properties.setProperty(PropertiesKeys.MENU_MODEL_CHOOSE.getProperty(), "Choose a chat model in the navigation menu.\nGPT-3.5: Free");
        properties.setProperty(PropertiesKeys.MENU_STARTED_GPT3_CHAT.getProperty(), "You have successfully started a chat with the GPT-3.5 model.");
        properties.setProperty(PropertiesKeys.MENU_STARTED_GPT4_CHAT.getProperty(), "You have successfully started a chat with the GPT-4 model. Response generation takes up to 2 minutes");
        properties.setProperty(PropertiesKeys.MENU_RETURNED_TO_MAIN_MENU.getProperty(), "You have been returned to the main menu.");
        properties.setProperty(PropertiesKeys.MENU_PRODUCT_LIST.getProperty(), """
        üíå How many tokens would you like to purchase?
    
        ‚ö° Hint:
        ‚ö™ 50K tokens ‚âà 300 responses from GPT-4
    
        ‚ÄºÔ∏è Payment only via Ukrainian cards, for payment in other currency contact our support - /help ‚ÄºÔ∏è
        """);
        properties.setProperty(PropertiesKeys.MENU_BALANCE.getProperty(), """
        GPT-4:
        ‚ö™ You have %düí∞tokens on your balance
    
        GPT-3.5:
        ‚ö™ Unlimited usage üåü
    
        Token purchase:
        """);

        // Chat
        properties.setProperty(PropertiesKeys.CHAT_REQUEST_WAITING.getProperty(), "\uD83E\uDDE0ChatGPT is generating a response...");
        properties.setProperty(PropertiesKeys.CHAT_GPT3_TITLE.getProperty(), "üåüGPT-3.5üåü");
        properties.setProperty(PropertiesKeys.CHAT_GPT4_TITLE.getProperty(), "‚ö°GPT-4‚ö°");
        properties.setProperty(PropertiesKeys.CHAT_END_CHAT.getProperty(), "End chat \uD83D\uDCA7");
        properties.setProperty(PropertiesKeys.CHAT_START_NEW_CHAT.getProperty(), "Start new chat \uD83D\uDD25");


        // Purchase
        properties.setProperty(PropertiesKeys.PURCHASE_MINIMAL_VALUE.getProperty(), "\uD83D\uDFE3+25K tokens - 119 UAH (-40%)");
        properties.setProperty(PropertiesKeys.PURCHASE_MEDIUM_VALUE.getProperty(), "\uD83D\uDFE3+50K tokens - 199 UAH (-50%)");
        properties.setProperty(PropertiesKeys.PURCHASE_MAXIMUM_VALUE.getProperty(), "\uD83D\uDFE3+100K tokens - 319 UAH (-80%)");
        properties.setProperty(PropertiesKeys.PURCHASE_BUY_TOKENS.getProperty(), "\uD83E\uDD51Buy Tokens");
        properties.setProperty(PropertiesKeys.PURCHASE_FINAL_MSG.getProperty(), """
        ‚ö™ Send %d UAH to this card:
        ‚ÄºÔ∏èMonoBank‚ÄºÔ∏è‚Üí (CARD NUMBER)
    
        ‚ö™ After payment, send a screenshot of the successful transfer to the chat and wait for the tokens to be credited within 10 minutes.
    
        üî¥ If payment is made but no screenshot is sent, the tokens will not be credited.
        """);

        // Admin
        properties.setProperty(PropertiesKeys.ADMIN_PRINT_USER_DATA.getProperty(), "Enter the username of the user and the number of tokens in the format: (username amount)");
        properties.setProperty(PropertiesKeys.ADMIN_USER_NOT_FOUND.getProperty(), "User not found");
        properties.setProperty(PropertiesKeys.ADMIN_TOKENS_ADDED.getProperty(), "Tokens have been successfully added to the balance of the specified user");
        properties.setProperty(PropertiesKeys.ADMIN_USER_SEND_PHOTO.getProperty(), "User @%s sent a photo:");
        properties.setProperty(PropertiesKeys.ADMIN_SEND_MESSAGE_TO_ALL.getProperty(), "Enter the message that will be sent to all users.");

        return properties;
    }

    private static void storeProperties(Path path, Properties properties)
    {
        try (FileOutputStream fileOutputStream = new FileOutputStream(path.toString()))
        {
            properties.store(fileOutputStream, "Config file");
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }
    }

    private static Properties loadExistProperties(Path path)
    {
        Properties properties = new Properties();
        try (FileInputStream fileInputStream = new FileInputStream(path.toString()))
        {
            properties.load(fileInputStream);
        }
        catch (IOException e)
        {
            e.printStackTrace();
        }
        return properties;
    }

    private static boolean isConfigPropertiesDataValid()
    {
        if (configProperties.getProperty("tgBot.username") == null || configProperties.getProperty("tgBot.username").equals("empty")
        || configProperties.getProperty("tgBot.token") == null || configProperties.getProperty("tgBot.token").equals("empty")
        || configProperties.getProperty("openAiGpt3.token") == null || configProperties.getProperty("openAiGpt3.token").equals("empty")
        || configProperties.getProperty("openAiGpt4.token") == null || configProperties.getProperty("openAiGpt4.token").equals("empty"))
        {
            return false;
        }
        return true;
    }

    public static Properties getConfigProperties()
    {
        return configProperties;
    }

    public static Properties getRuMsgProperties()
    {
        return ruMsgProperties;
    }

    public static Properties getEnMsgProperties()
    {
        return enMsgProperties;
    }
}
